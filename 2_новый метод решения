# сопоставление и комбинаторный подсчёт
from itertools import *

def f(x, y, z, w):
     return ((x or (not (y))) and (not (y == z)) and w)

for a1, a2, a3, a4 in product([0, 1], repeat=4):
    table = [(0, 1, a1, 0), (a2, 1, 1, 0), (1, a3, 0, a4)]
    if len(table) == len(set(table)):
        for p in permutations('xyzw'):
            if [f(**dict(zip(p, r))) for r in table] == [1, 1, 1]:
                print(p)
                
#заполнение пустот
from itertools import *


def f(x, y, z, w):
    return (x and (not y)) or (x == z) or w


for a1, a2, a3, a4, a5, a6 in product([0, 1], repeat=6):
    table = [(1, a1, a2, 1), (a3, 0, a4, 0), (1, a5, 1, a6)]
    if len(table) == len(set(table)):
        for p in permutations('xyzw'):
            if [f(**dict(zip(p, r))) for r in table] == [0, 0, 0]:
                print(p)
